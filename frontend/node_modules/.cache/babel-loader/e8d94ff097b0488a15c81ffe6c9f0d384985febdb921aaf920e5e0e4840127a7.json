{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Sidebar from './Sidebar';\nimport ChatInput from './ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000');\nconst Chat = ({\n  username\n}) => {\n  _s();\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.emit('join', username);\n    socket.on('activeUsers', users => {\n      // Ensure users are an array to avoid map errors\n      setActiveUsers(Array.isArray(users) ? users : []);\n    });\n    socket.on('message', ({\n      message,\n      from\n    }) => {\n      // Ensure messages are updated correctly\n      setMessages(prev => [...prev, {\n        from,\n        message\n      }]);\n    });\n    return () => {\n      // Clean up the socket connection on component unmount\n      socket.off('activeUsers');\n      socket.off('message');\n    };\n  }, [username]);\n  const sendMessage = message => {\n    if (message && selectedUser) {\n      socket.emit('privateMessage', {\n        message,\n        to: selectedUser.socketId\n      });\n      setMessages([...messages, {\n        from: 'Me',\n        message\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      activeUsers: activeUsers,\n      setSelectedUser: setSelectedUser,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Chat with \", selectedUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.from === 'Me' ? 'message-sent' : 'message-received',\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.from, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Select a user to start chatting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"JBf0Wbl45dT/fvNcG4/1Arnpvkk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","Sidebar","ChatInput","jsxDEV","_jsxDEV","socket","Chat","username","_s","activeUsers","setActiveUsers","selectedUser","setSelectedUser","messages","setMessages","emit","on","users","Array","isArray","message","from","prev","off","sendMessage","to","socketId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Sidebar from './Sidebar'; \r\nimport ChatInput from './ChatInput'; \r\n\r\nconst socket = io('http://localhost:3000'); \r\n\r\nconst Chat = ({ username }) => {\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.emit('join', username);\r\n        socket.on('activeUsers', (users) => {\r\n            // Ensure users are an array to avoid map errors\r\n            setActiveUsers(Array.isArray(users) ? users : []);\r\n        });\r\n        socket.on('message', ({ message, from }) => {\r\n            // Ensure messages are updated correctly\r\n            setMessages((prev) => [...prev, { from, message }]);\r\n        });\r\n\r\n        return () => {\r\n            // Clean up the socket connection on component unmount\r\n            socket.off('activeUsers');\r\n            socket.off('message');\r\n        };\r\n    }, [username]);\r\n\r\n    const sendMessage = (message) => {\r\n        if (message && selectedUser) {\r\n            socket.emit('privateMessage', { message, to: selectedUser.socketId });\r\n            setMessages([...messages, { from: 'Me', message }]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Welcome, {username}</h3>\r\n            <Sidebar activeUsers={activeUsers} setSelectedUser={setSelectedUser} selectedUser={selectedUser} />\r\n            {selectedUser ? (\r\n                <div>\r\n                    <h4>Chat with {selectedUser.username}</h4>\r\n                    <div className=\"messages\">\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className={msg.from === 'Me' ? 'message-sent' : 'message-received'}>\r\n                                <strong>{msg.from}:</strong> {msg.message}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <ChatInput sendMessage={sendMessage} />\r\n                </div>\r\n            ) : (\r\n                <h4>Select a user to start chatting</h4>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMM,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZM,MAAM,CAACU,IAAI,CAAC,MAAM,EAAER,QAAQ,CAAC;IAC7BF,MAAM,CAACW,EAAE,CAAC,aAAa,EAAGC,KAAK,IAAK;MAChC;MACAP,cAAc,CAACQ,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,CAAC;IACrD,CAAC,CAAC;IACFZ,MAAM,CAACW,EAAE,CAAC,SAAS,EAAE,CAAC;MAAEI,OAAO;MAAEC;IAAK,CAAC,KAAK;MACxC;MACAP,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAED,IAAI;QAAED;MAAQ,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC;IAEF,OAAO,MAAM;MACT;MACAf,MAAM,CAACkB,GAAG,CAAC,aAAa,CAAC;MACzBlB,MAAM,CAACkB,GAAG,CAAC,SAAS,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,MAAMiB,WAAW,GAAIJ,OAAO,IAAK;IAC7B,IAAIA,OAAO,IAAIT,YAAY,EAAE;MACzBN,MAAM,CAACU,IAAI,CAAC,gBAAgB,EAAE;QAAEK,OAAO;QAAEK,EAAE,EAAEd,YAAY,CAACe;MAAS,CAAC,CAAC;MACrEZ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEQ,IAAI,EAAE,IAAI;QAAED;MAAQ,CAAC,CAAC,CAAC;IACvD;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,GAAI,WAAS,EAACpB,QAAQ;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5B3B,OAAA,CAACH,OAAO;MAACQ,WAAW,EAAEA,WAAY;MAACG,eAAe,EAAEA,eAAgB;MAACD,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClGpB,YAAY,gBACTP,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,GAAI,YAAU,EAAChB,YAAY,CAACJ,QAAQ;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1C3B,OAAA;QAAK4B,SAAS,EAAC,UAAU;QAAAL,QAAA,EACpBd,QAAQ,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrB/B,OAAA;UAAiB4B,SAAS,EAAEE,GAAG,CAACb,IAAI,KAAK,IAAI,GAAG,cAAc,GAAG,kBAAmB;UAAAM,QAAA,gBAChFvB,OAAA;YAAAuB,QAAA,GAASO,GAAG,CAACb,IAAI,EAAC,GAAC;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,GAAG,CAACd,OAAO;QAAA,GADnCe,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN3B,OAAA,CAACF,SAAS;QAACsB,WAAW,EAAEA;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,gBAEN3B,OAAA;MAAAuB,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvB,EAAA,CAnDIF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAqDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}