{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport ChatInput from './ChatInput';\nimport Message from './Message';\nimport Sidebar from './Sidebar';\nimport EmojiPicker from 'emoji-picker-react';\nimport \"../styles/Chat.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction Chat({\n  username\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [filePreview, setFilePreview] = useState(null);\n\n  // Function to handle message submission\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    if (message.trim() && selectedUser) {\n      const messageData = {\n        sender: username,\n        receiver: selectedUser,\n        message,\n        timestamp: new Date(),\n        status: 'sent'\n      };\n      socket.emit('send_private_message', messageData);\n      setMessages(prevMessages => [...prevMessages, messageData]);\n      setMessage('');\n      setShowEmojiPicker(false);\n    }\n  }, [message, selectedUser, username]);\n\n  // Handle emoji selection\n  const onEmojiClick = (event, emojiObject) => {\n    setMessage(prevMessage => prevMessage + emojiObject.emoji);\n  };\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFilePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Handle typing indicator\n  const handleTyping = e => {\n    setMessage(e.target.value);\n    socket.emit('typing', {\n      user: username,\n      receiver: selectedUser\n    });\n  };\n\n  // Set up socket listeners\n  useEffect(() => {\n    socket.emit('join', username);\n    socket.on('updateUserList', users => {\n      const uniqueUsers = users.filter((user, index, self) => index === self.findIndex(u => u.username === user.username));\n      setActiveUsers(uniqueUsers);\n    });\n    socket.on('receive_private_message', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    socket.on('user_typing', ({\n      user\n    }) => {\n      if (user === selectedUser) {\n        setIsTyping(true);\n        setTimeout(() => setIsTyping(false), 2000);\n      }\n    });\n    return () => {\n      socket.off('updateUserList');\n      socket.off('receive_private_message');\n      socket.off('user_typing');\n    };\n  }, [username, selectedUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      username: username,\n      activeUsers: activeUsers,\n      selectedUser: selectedUser,\n      onSelectUser: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Chat with \", selectedUser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [selectedUser, \" is typing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.filter(msg => msg.sender === selectedUser && msg.receiver === username || msg.sender === username && msg.receiver === selectedUser).map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n            text: msg.message,\n            time: new Date(msg.timestamp).toLocaleTimeString(),\n            isSender: msg.sender === username,\n            status: msg.status\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          message: message,\n          setMessage: handleTyping,\n          handleSubmit: handleSubmit,\n          onEmojiClick: onEmojiClick,\n          showEmojiPicker: showEmojiPicker,\n          setShowEmojiPicker: setShowEmojiPicker,\n          handleFileUpload: handleFileUpload,\n          filePreview: filePreview,\n          setFilePreview: setFilePreview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"Waag7Th9ngUynGSVng1j2hJ5WLo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","ChatInput","Message","Sidebar","EmojiPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Chat","username","_s","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","isTyping","setIsTyping","showEmojiPicker","setShowEmojiPicker","filePreview","setFilePreview","handleSubmit","e","preventDefault","trim","messageData","sender","receiver","timestamp","Date","status","emit","prevMessages","onEmojiClick","event","emojiObject","prevMessage","emoji","handleFileUpload","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleTyping","value","user","on","users","uniqueUsers","filter","index","self","findIndex","u","data","setTimeout","off","className","children","onSelectUser","fileName","_jsxFileName","lineNumber","columnNumber","msg","map","text","time","toLocaleTimeString","isSender","_c","$RefreshReg$"],"sources":["c:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport ChatInput from './ChatInput';\r\nimport Message from './Message';\r\nimport Sidebar from './Sidebar';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport \"../styles/Chat.css\";\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction Chat({ username }) {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const [filePreview, setFilePreview] = useState(null);\r\n\r\n    // Function to handle message submission\r\n    const handleSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (message.trim() && selectedUser) {\r\n            const messageData = {\r\n                sender: username,\r\n                receiver: selectedUser,\r\n                message,\r\n                timestamp: new Date(),\r\n                status: 'sent'\r\n            };\r\n\r\n            socket.emit('send_private_message', messageData);\r\n            \r\n            setMessages((prevMessages) => [...prevMessages, messageData]);\r\n            setMessage('');\r\n            setShowEmojiPicker(false);\r\n        }\r\n    }, [message, selectedUser, username]);\r\n\r\n    // Handle emoji selection\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setMessage(prevMessage => prevMessage + emojiObject.emoji);\r\n    };\r\n\r\n    // Handle file upload\r\n    const handleFileUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setFilePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    // Handle typing indicator\r\n    const handleTyping = (e) => {\r\n        setMessage(e.target.value);\r\n        socket.emit('typing', { user: username, receiver: selectedUser });\r\n    };\r\n\r\n    // Set up socket listeners\r\n    useEffect(() => {\r\n        socket.emit('join', username);\r\n        \r\n        socket.on('updateUserList', (users) => {\r\n            const uniqueUsers = users.filter((user, index, self) =>\r\n                index === self.findIndex((u) => u.username === user.username)\r\n            );\r\n            setActiveUsers(uniqueUsers);\r\n        });\r\n\r\n        socket.on('receive_private_message', (data) => {\r\n            setMessages((prevMessages) => [...prevMessages, data]);\r\n        });\r\n\r\n        socket.on('user_typing', ({ user }) => {\r\n            if (user === selectedUser) {\r\n                setIsTyping(true);\r\n                setTimeout(() => setIsTyping(false), 2000);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off('updateUserList');\r\n            socket.off('receive_private_message');\r\n            socket.off('user_typing');\r\n        };\r\n    }, [username, selectedUser]);\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <Sidebar\r\n                username={username}\r\n                activeUsers={activeUsers}\r\n                selectedUser={selectedUser}\r\n                onSelectUser={setSelectedUser}\r\n            />\r\n            \r\n            <div className=\"chat-box\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <div className=\"chat-header\">\r\n                            <h3>Chat with {selectedUser}</h3>\r\n                            {isTyping && <div className=\"typing-indicator\">{selectedUser} is typing...</div>}\r\n                        </div>\r\n                        <div className=\"messages\">\r\n                            {messages\r\n                                .filter(msg => \r\n                                    (msg.sender === selectedUser && msg.receiver === username) ||\r\n                                    (msg.sender === username && msg.receiver === selectedUser)\r\n                                )\r\n                                .map((msg, index) => (\r\n                                    <Message\r\n                                        key={index}\r\n                                        text={msg.message}\r\n                                        time={new Date(msg.timestamp).toLocaleTimeString()}\r\n                                        isSender={msg.sender === username}\r\n                                        status={msg.status}\r\n                                    />\r\n                                ))}\r\n                        </div>\r\n                        <ChatInput\r\n                            message={message}\r\n                            setMessage={handleTyping}\r\n                            handleSubmit={handleSubmit}\r\n                            onEmojiClick={onEmojiClick}\r\n                            showEmojiPicker={showEmojiPicker}\r\n                            setShowEmojiPicker={setShowEmojiPicker}\r\n                            handleFileUpload={handleFileUpload}\r\n                            filePreview={filePreview}\r\n                            setFilePreview={setFilePreview}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <div className=\"placeholder\">\r\n                        <p>Select a user to start chatting</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}