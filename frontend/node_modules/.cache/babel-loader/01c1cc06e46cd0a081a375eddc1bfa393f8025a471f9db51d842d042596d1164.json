{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Chat = ({\n  username\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [receiverUsername, setReceiverUsername] = useState('');\n  useEffect(() => {\n    // Listen for incoming private messages\n    socket.on('receive_private_message', ({\n      sender,\n      message\n    }) => {\n      setMessages(prevMessages => [...prevMessages, {\n        sender,\n        message\n      }]);\n    });\n    return () => {\n      socket.off('receive_private_message');\n    };\n  }, []);\n  const handleSendMessage = () => {\n    if (receiverUsername && message) {\n      socket.emit('send_private_message', {\n        receiverUsername,\n        message\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'You',\n        message\n      }]);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Receiver username\",\n      value: receiverUsername,\n      onChange: e => setReceiverUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"YsRVTiadyu+h5z5/tvA3lUK5SYE=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Chat","username","_s","message","setMessage","messages","setMessages","receiverUsername","setReceiverUsername","on","sender","prevMessages","off","handleSendMessage","emit","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Chat = ({ username }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [receiverUsername, setReceiverUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Listen for incoming private messages\r\n    socket.on('receive_private_message', ({ sender, message }) => {\r\n      setMessages((prevMessages) => [...prevMessages, { sender, message }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receive_private_message');\r\n    };\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    if (receiverUsername && message) {\r\n      socket.emit('send_private_message', { receiverUsername, message });\r\n      setMessages((prevMessages) => [...prevMessages, { sender: 'You', message }]);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.sender}:</strong> {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Receiver username\"\r\n        value={receiverUsername}\r\n        onChange={(e) => setReceiverUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter message\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}