{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  username,\n  token\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [receiverUsername, setReceiverUsername] = useState('');\n  useEffect(() => {\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n    newSocket.emit('join', username);\n    newSocket.on('active_users', users => {\n      setActiveUsers(users);\n    });\n    newSocket.on('receive_private_message', ({\n      sender,\n      message\n    }) => {\n      setMessages(prevMessages => [...prevMessages, {\n        sender,\n        message\n      }]);\n    });\n    return () => newSocket.disconnect();\n  }, [username]);\n  const sendMessage = () => {\n    if (receiverUsername && message) {\n      socket.emit('send_private_message', {\n        receiverUsername,\n        message\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        sender: username,\n        message\n      }]);\n      setMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.username\n        }, user.socketId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.sender === username ? 'right' : 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receiver username\",\n        value: receiverUsername,\n        onChange: e => setReceiverUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"keFNMf4wKEvRBVcnfj/sGC/jRSg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","Chat","username","token","_s","socket","setSocket","activeUsers","setActiveUsers","message","setMessage","messages","setMessages","receiverUsername","setReceiverUsername","newSocket","emit","on","users","sender","prevMessages","disconnect","sendMessage","handleKeyPress","e","key","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","socketId","msg","index","style","textAlign","type","placeholder","value","onChange","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst Chat = ({ username, token }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [receiverUsername, setReceiverUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    const newSocket = io('http://localhost:5000');\r\n    setSocket(newSocket);\r\n    \r\n    newSocket.emit('join', username);\r\n\r\n    newSocket.on('active_users', (users) => {\r\n      setActiveUsers(users);\r\n    });\r\n\r\n    newSocket.on('receive_private_message', ({ sender, message }) => {\r\n      setMessages((prevMessages) => [...prevMessages, { sender, message }]);\r\n    });\r\n\r\n    return () => newSocket.disconnect();\r\n  }, [username]);\r\n\r\n  const sendMessage = () => {\r\n    if (receiverUsername && message) {\r\n      socket.emit('send_private_message', { receiverUsername, message });\r\n      setMessages((prevMessages) => [...prevMessages, { sender: username, message }]);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat Room</h2>\r\n      <div>\r\n        <h3>Active Users</h3>\r\n        <ul>\r\n          {activeUsers.map((user) => (\r\n            <li key={user.socketId}>{user.username}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Messages</h3>\r\n        <div>\r\n          {messages.map((msg, index) => (\r\n            <div key={index} style={{ textAlign: msg.sender === username ? 'right' : 'left' }}>\r\n              <strong>{msg.sender}: </strong>{msg.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Receiver username\"\r\n          value={receiverUsername}\r\n          onChange={(e) => setReceiverUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}