{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport ChatInput from './ChatInput';\nimport Message from './Message';\nimport Sidebar from './Sidebar';\nimport \"../styles/Chat.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000', {\n  withCredentials: true,\n  transports: ['websocket']\n});\nfunction Chat({\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Join chat when component mounts\n    if (username) {\n      socket.emit('join', username);\n    }\n\n    // Listen for active users update\n    socket.on('updateUserList', users => {\n      console.log('Active users updated:', users);\n      setActiveUsers(users.filter(user => user.username !== username));\n    });\n\n    // Listen for incoming messages\n    socket.on('receive_private_message', data => {\n      console.log('Received message:', data);\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socket.off('updateUserList');\n      socket.off('receive_private_message');\n    };\n  }, [username]);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    if (message.trim() && selectedUser) {\n      console.log('Sending message to:', selectedUser);\n      const messageData = {\n        sender: username,\n        receiver: selectedUser,\n        message: message.trim()\n      };\n      socket.emit('send_private_message', messageData);\n\n      // Add message to local state\n      setMessages(prev => [...prev, {\n        ...messageData,\n        timestamp: new Date()\n      }]);\n      setMessage('');\n    }\n  }, [message, selectedUser, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      username: username,\n      activeUsers: activeUsers,\n      selectedUser: selectedUser,\n      onSelectUser: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Chat with \", selectedUser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.filter(msg => msg.sender === selectedUser && msg.receiver === username || msg.sender === username && msg.receiver === selectedUser).map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n            text: msg.message,\n            isSender: msg.sender === username,\n            time: new Date(msg.timestamp).toLocaleTimeString()\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          message: message,\n          setMessage: setMessage,\n          handleSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Welcome, \", username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"bmkJGw8RGf5cylDaoJBMnpkccCY=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","ChatInput","Message","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","withCredentials","transports","Chat","username","_s","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","message","setMessage","emit","on","users","console","log","filter","user","data","prev","off","handleSubmit","e","preventDefault","trim","messageData","sender","receiver","timestamp","Date","className","children","onSelectUser","fileName","_jsxFileName","lineNumber","columnNumber","msg","map","index","text","isSender","time","toLocaleTimeString","_c","$RefreshReg$"],"sources":["c:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport ChatInput from './ChatInput';\r\nimport Message from './Message';\r\nimport Sidebar from './Sidebar';\r\nimport \"../styles/Chat.css\";\r\n\r\nconst socket = io('http://localhost:5000', {\r\n    withCredentials: true,\r\n    transports: ['websocket']\r\n});\r\n\r\nfunction Chat({ username }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Join chat when component mounts\r\n        if (username) {\r\n            socket.emit('join', username);\r\n        }\r\n\r\n        // Listen for active users update\r\n        socket.on('updateUserList', (users) => {\r\n            console.log('Active users updated:', users);\r\n            setActiveUsers(users.filter(user => user.username !== username));\r\n        });\r\n\r\n        // Listen for incoming messages\r\n        socket.on('receive_private_message', (data) => {\r\n            console.log('Received message:', data);\r\n            setMessages(prev => [...prev, data]);\r\n        });\r\n\r\n        // Cleanup on unmount\r\n        return () => {\r\n            socket.off('updateUserList');\r\n            socket.off('receive_private_message');\r\n        };\r\n    }, [username]);\r\n\r\n    const handleSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (message.trim() && selectedUser) {\r\n            console.log('Sending message to:', selectedUser);\r\n            const messageData = {\r\n                sender: username,\r\n                receiver: selectedUser,\r\n                message: message.trim()\r\n            };\r\n            \r\n            socket.emit('send_private_message', messageData);\r\n            \r\n            // Add message to local state\r\n            setMessages(prev => [...prev, { ...messageData, timestamp: new Date() }]);\r\n            setMessage('');\r\n        }\r\n    }, [message, selectedUser, username]);\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <Sidebar\r\n                username={username}\r\n                activeUsers={activeUsers}\r\n                selectedUser={selectedUser}\r\n                onSelectUser={setSelectedUser}\r\n            />\r\n            \r\n            <div className=\"chat-box\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <div className=\"chat-header\">\r\n                            <h3>Chat with {selectedUser}</h3>\r\n                        </div>\r\n                        <div className=\"messages\">\r\n                            {messages\r\n                                .filter(msg => \r\n                                    (msg.sender === selectedUser && msg.receiver === username) ||\r\n                                    (msg.sender === username && msg.receiver === selectedUser)\r\n                                )\r\n                                .map((msg, index) => (\r\n                                    <Message\r\n                                        key={index}\r\n                                        text={msg.message}\r\n                                        isSender={msg.sender === username}\r\n                                        time={new Date(msg.timestamp).toLocaleTimeString()}\r\n                                    />\r\n                                ))}\r\n                        </div>\r\n                        <ChatInput\r\n                            message={message}\r\n                            setMessage={setMessage}\r\n                            handleSubmit={handleSubmit}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <div className=\"no-chat-selected\">\r\n                        <h3>Welcome, {username}!</h3>\r\n                        <p>Select a user to start chatting</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}