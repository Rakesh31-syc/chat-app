{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Sidebar from './Sidebar'; // Import the Sidebar component\nimport ChatInput from './ChatInput';\nimport Message from './Message';\nimport '..styles/Chat.css'; // Add custom CSS for the chat\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Chat = ({\n  username\n}) => {\n  _s();\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [currentChatUser, setCurrentChatUser] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  useEffect(() => {\n    // Emit login event to the server when a new user logs in\n    socket.emit('login', username);\n\n    // Listen for active users from server\n    socket.on('activeUsers', users => {\n      setActiveUsers(users);\n    });\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', messageData => {\n      if (messageData.from === currentChatUser || messageData.to === currentChatUser) {\n        setChatMessages(prevMessages => [...prevMessages, messageData]);\n      }\n    });\n    return () => {\n      socket.off();\n    };\n  }, [currentChatUser, username]);\n  const handleSendMessage = message => {\n    if (message.trim() !== '' && currentChatUser) {\n      const messageData = {\n        from: username,\n        to: currentChatUser,\n        message\n      };\n      socket.emit('sendMessage', messageData);\n      setChatMessages(prevMessages => [...prevMessages, messageData]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      username: username,\n      activeUsers: activeUsers,\n      currentChatUser: currentChatUser,\n      selectUserToChat: setCurrentChatUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          text: msg.message,\n          time: msg.time\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), currentChatUser && /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"6EF+81ZSMfPxZBeE3wFbH/shRT4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","Sidebar","ChatInput","Message","jsxDEV","_jsxDEV","socket","Chat","username","_s","activeUsers","setActiveUsers","currentChatUser","setCurrentChatUser","chatMessages","setChatMessages","emit","on","users","messageData","from","to","prevMessages","off","handleSendMessage","message","trim","className","children","selectUserToChat","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","text","time","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Sidebar from './Sidebar'; // Import the Sidebar component\r\nimport ChatInput from './ChatInput';\r\nimport Message from './Message';\r\nimport '..styles/Chat.css'; // Add custom CSS for the chat\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Chat = ({ username }) => {\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [currentChatUser, setCurrentChatUser] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Emit login event to the server when a new user logs in\r\n    socket.emit('login', username);\r\n\r\n    // Listen for active users from server\r\n    socket.on('activeUsers', (users) => {\r\n      setActiveUsers(users);\r\n    });\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (messageData) => {\r\n      if (messageData.from === currentChatUser || messageData.to === currentChatUser) {\r\n        setChatMessages((prevMessages) => [...prevMessages, messageData]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [currentChatUser, username]);\r\n\r\n  const handleSendMessage = (message) => {\r\n    if (message.trim() !== '' && currentChatUser) {\r\n      const messageData = { from: username, to: currentChatUser, message };\r\n      socket.emit('sendMessage', messageData);\r\n      setChatMessages((prevMessages) => [...prevMessages, messageData]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-app\">\r\n      <Sidebar\r\n        username={username}\r\n        activeUsers={activeUsers}\r\n        currentChatUser={currentChatUser}\r\n        selectUserToChat={setCurrentChatUser}\r\n      />\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-messages\">\r\n          {chatMessages.map((msg, index) => (\r\n            <Message key={index} text={msg.message} time={msg.time} />\r\n          ))}\r\n        </div>\r\n        {currentChatUser && (\r\n          <ChatInput onSendMessage={handleSendMessage} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}