{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Chat from './components/Chat';\nimport Sidebar from './components/Sidebar';\nimport './styles/App.css'; // Global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async credentials => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', credentials);\n      setUsername(response.data.username);\n      setIsLoggedIn(true);\n      navigate('/chat');\n    } catch (error) {\n      alert(error.response.data.message || \"Login failed\");\n    }\n  };\n  const handleRegister = async userInfo => {\n    try {\n      await axios.post('http://localhost:5000/register', userInfo);\n      alert(\"Registration successful! Please log in.\");\n      navigate('/');\n    } catch (error) {\n      alert(error.response.data.message || \"Registration failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      element: /*#__PURE__*/_jsxDEV(Register, {\n        onRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/chat\",\n      element: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please login to access the chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"siGlQHly0ID1IsArjLju5TOLCxs=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useNavigate","axios","Login","Register","Chat","Sidebar","jsxDEV","_jsxDEV","App","_s","username","setUsername","isLoggedIn","setIsLoggedIn","navigate","handleLogin","credentials","response","post","data","error","alert","message","handleRegister","userInfo","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","className","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Chat from './components/Chat';\nimport Sidebar from './components/Sidebar';\nimport './styles/App.css'; // Global styles\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', credentials);\n      setUsername(response.data.username);\n      setIsLoggedIn(true);\n      navigate('/chat');\n    } catch (error) {\n      alert(error.response.data.message || \"Login failed\");\n    }\n  };\n\n  const handleRegister = async (userInfo) => {\n    try {\n      await axios.post('http://localhost:5000/register', userInfo);\n      alert(\"Registration successful! Please log in.\");\n      navigate('/');\n    } catch (error) {\n      alert(error.response.data.message || \"Registration failed\");\n    }\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Login onLogin={handleLogin} />} />\n      <Route path=\"/register\" element={<Register onRegister={handleRegister} />} />\n      <Route \n        path=\"/chat\" \n        element={\n          isLoggedIn ? (\n            <div className=\"app\">\n              <Sidebar username={username} />\n              <Chat username={username} />\n            </div>\n          ) : (\n            <div>Please login to access the chat</div>\n          )\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}