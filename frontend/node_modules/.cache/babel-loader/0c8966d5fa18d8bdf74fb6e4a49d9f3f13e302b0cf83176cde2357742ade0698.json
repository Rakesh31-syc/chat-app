{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\ChatInput.js\";\nimport React from 'react';\nimport \"../styles/ChatInput.css\";\n\n/**\r\n * ChatInput Component\r\n * \r\n * Handles user input for sending messages.\r\n * \r\n * @param {Object} props\r\n * @param {String} props.message - The current message being typed.\r\n * @param {Function} props.setMessage - Updates the message state.\r\n * @param {Function} props.handleSubmit - Handles message submission.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInput({\n  message,\n  setMessage,\n  handleSubmit\n}) {\n  /**\r\n   * Handles key press events on the input field.\r\n   * \r\n   * If the Enter key is pressed, submits the message.\r\n   * \r\n   * @param {Object} e - The key press event.\r\n   */\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSubmit(e); // Submit the message on Enter key press\n    }\n  };\n\n  /**\r\n   * Handles click events on the send button.\r\n   * \r\n   * Submits the message when the send button is clicked.\r\n   * \r\n   * @param {Object} e - The click event.\r\n   */\n  const handleSendClick = e => {\n    handleSubmit(e); // Submit the message on send button click\n  };\n\n  /**\r\n   * Updates the message state when the input field changes.\r\n   * \r\n   * @param {Object} e - The change event.\r\n   */\n  const handleInputChange = e => {\n    setMessage(e.target.value); // Update the message state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type a message...\",\n      className: \"chat-input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSendClick,\n      className: \"send-button\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatInput","message","setMessage","handleSubmit","handleKeyPress","e","key","preventDefault","handleSendClick","handleInputChange","target","value","className","children","type","onChange","onKeyPress","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/ChatInput.js"],"sourcesContent":["import React from 'react';\r\nimport \"../styles/ChatInput.css\";\r\n\r\n/**\r\n * ChatInput Component\r\n * \r\n * Handles user input for sending messages.\r\n * \r\n * @param {Object} props\r\n * @param {String} props.message - The current message being typed.\r\n * @param {Function} props.setMessage - Updates the message state.\r\n * @param {Function} props.handleSubmit - Handles message submission.\r\n */\r\nfunction ChatInput({ message, setMessage, handleSubmit }) {\r\n    /**\r\n     * Handles key press events on the input field.\r\n     * \r\n     * If the Enter key is pressed, submits the message.\r\n     * \r\n     * @param {Object} e - The key press event.\r\n     */\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            handleSubmit(e); // Submit the message on Enter key press\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handles click events on the send button.\r\n     * \r\n     * Submits the message when the send button is clicked.\r\n     * \r\n     * @param {Object} e - The click event.\r\n     */\r\n    const handleSendClick = (e) => {\r\n        handleSubmit(e); // Submit the message on send button click\r\n    };\r\n\r\n    /**\r\n     * Updates the message state when the input field changes.\r\n     * \r\n     * @param {Object} e - The change event.\r\n     */\r\n    const handleInputChange = (e) => {\r\n        setMessage(e.target.value); // Update the message state\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-input-container\">\r\n            <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={handleInputChange}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"Type a message...\"\r\n                className=\"chat-input-field\"\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n                onClick={handleSendClick}\r\n                className=\"send-button\"\r\n            >\r\n                Send\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,SAASC,SAASA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAE;EACtD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBD,CAAC,CAACE,cAAc,CAAC,CAAC;MAClBJ,YAAY,CAACE,CAAC,CAAC,CAAC,CAAC;IACrB;EACJ,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,eAAe,GAAIH,CAAC,IAAK;IAC3BF,YAAY,CAACE,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED;AACJ;AACA;AACA;AACA;EACI,MAAMI,iBAAiB,GAAIJ,CAAC,IAAK;IAC7BH,UAAU,CAACG,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACIZ,OAAA;IAAKa,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCd,OAAA;MACIe,IAAI,EAAC,MAAM;MACXH,KAAK,EAAEV,OAAQ;MACfc,QAAQ,EAAEN,iBAAkB;MAC5BO,UAAU,EAAEZ,cAAe;MAC3Ba,WAAW,EAAC,mBAAmB;MAC/BL,SAAS,EAAC;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFtB,OAAA;MACIe,IAAI,EAAC,QAAQ;MACbQ,OAAO,EAAEd,eAAgB;MACzBI,SAAS,EAAC,aAAa;MAAAC,QAAA,EAC1B;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACE,EAAA,GAtDQvB,SAAS;AAwDlB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}