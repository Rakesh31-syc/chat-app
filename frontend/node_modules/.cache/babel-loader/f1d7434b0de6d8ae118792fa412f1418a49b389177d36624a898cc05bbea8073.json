{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Chat from './components/Chat';\nimport Sidebar from './components/Sidebar';\nimport './styles/App.css'; // Global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleJoin = () => {\n    if (username) {\n      setIsLoggedIn(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Load Chat Interface after login\n    _jsxDEV(Chat, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"DhMr7c4mcnevCGEp5s0vGYJHbvo=\");\n_c = App;\nexport default App;\n\n/*function App() {\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', credentials);\n      setUsername(response.data.username);\n      setIsLoggedIn(true);\n      navigate('/chat'); // Navigate to chat room after login\n    } catch (error) {\n      alert(error.response.data.message || \"Login failed\");\n    }\n  };\n\n  const handleRegister = async (userInfo) => {\n    try {\n      await axios.post('http://localhost:5000/register', userInfo);\n      alert(\"Registration successful! Please log in.\");\n      navigate('/'); // Navigate back to login after registration\n    } catch (error) {\n      alert(error.response.data.message || \"Registration failed\");\n    }\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Login onLogin={handleLogin} />} />\n      <Route path=\"/register\" element={<Register onRegister={handleRegister} />} />\n      <Route \n        path=\"/chat\" \n        element={\n          isLoggedIn ? (\n            <div className=\"app\">\n              <Sidebar username={username} />\n              <Chat username={username} />\n            </div>\n          ) : (\n            <div>Please login to access the chat</div>\n          )\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","useNavigate","axios","Login","Register","Chat","Sidebar","jsxDEV","_jsxDEV","App","_s","username","setUsername","isLoggedIn","setIsLoggedIn","handleJoin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Chat from './components/Chat';\nimport Sidebar from './components/Sidebar';\nimport './styles/App.css'; // Global styles\n\nconst App = () => {\n    const [username, setUsername] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const handleJoin = () => {\n        if (username) {\n            setIsLoggedIn(true);\n        }\n    };\n\n    return (\n        <div>\n            {/* Login Screen */}\n            {!isLoggedIn ? (\n                <div>\n                    <h3>Enter Username</h3>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        placeholder=\"Your username\"\n                    />\n                    <button onClick={handleJoin}>Join Chat</button>\n                </div>\n            ) : (\n                // Load Chat Interface after login\n                <Chat username={username} />\n            )}\n        </div>\n    );\n};\n\nexport default App;\n\n/*function App() {\n  const [username, setUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', credentials);\n      setUsername(response.data.username);\n      setIsLoggedIn(true);\n      navigate('/chat'); // Navigate to chat room after login\n    } catch (error) {\n      alert(error.response.data.message || \"Login failed\");\n    }\n  };\n\n  const handleRegister = async (userInfo) => {\n    try {\n      await axios.post('http://localhost:5000/register', userInfo);\n      alert(\"Registration successful! Please log in.\");\n      navigate('/'); // Navigate back to login after registration\n    } catch (error) {\n      alert(error.response.data.message || \"Registration failed\");\n    }\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Login onLogin={handleLogin} />} />\n      <Route path=\"/register\" element={<Register onRegister={handleRegister} />} />\n      <Route \n        path=\"/chat\" \n        element={\n          isLoggedIn ? (\n            <div className=\"app\">\n              <Sidebar username={username} />\n              <Chat username={username} />\n            </div>\n          ) : (\n            <div>Please login to access the chat</div>\n          )\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;*/\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIJ,QAAQ,EAAE;MACVG,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAQ,QAAA,EAEK,CAACH,UAAU,gBACRL,OAAA;MAAAQ,QAAA,gBACIR,OAAA;QAAAQ,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBZ,OAAA;QACIa,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEX,QAAS;QAChBY,QAAQ,EAAGC,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,WAAW,EAAC;MAAe;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFZ,OAAA;QAAQmB,OAAO,EAAEZ,UAAW;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;IAAA;IAEN;IACAZ,OAAA,CAACH,IAAI;MAACM,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACV,EAAA,CA9BID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAgCT,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}