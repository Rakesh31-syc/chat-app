{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport ChatInput from './ChatInput';\nimport Message from './Message';\nimport \"../styles/Chat.css\"; // Adjust according to your setup\n\n// Initialize socket connection\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction Chat({\n  username\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n\n  // Function to handle message submission\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    if (message.trim() && selectedUser) {\n      console.log(`Sending message to ${selectedUser}:`, message);\n      socket.emit('send_private_message', {\n        sender: username,\n        receiver: selectedUser,\n        message\n      });\n      // Add the message to the local message list\n      setMessages(prevMessages => [...prevMessages, {\n        sender: username,\n        message\n      }]);\n      setMessage(''); // Clear the input field\n    }\n  }, [message, selectedUser, username]);\n\n  // Set up socket listeners and emit join event\n  useEffect(() => {\n    socket.emit('join', username);\n\n    // Update the active users list\n    socket.on('updateUserList', users => {\n      console.log('Updated active users list:', users);\n      const uniqueUsers = users.filter((user, index, self) => index === self.findIndex(u => u.username === user.username));\n      setActiveUsers(uniqueUsers);\n    });\n\n    // Listen for incoming private messages\n    socket.on('receive_private_message', data => {\n      console.log('Received private message:', data);\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Clean up event listeners on unmount\n    return () => {\n      socket.off('updateUserList');\n      socket.off('receive_private_message');\n    };\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setSelectedUser(user.username),\n            className: selectedUser === user.username ? 'active' : '',\n            children: user.username\n          }, user.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.filter(msg => msg.sender === selectedUser || msg.sender === username).map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n            text: msg.message,\n            time: new Date().toLocaleTimeString(),\n            isSender: msg.sender === username\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          message: message,\n          setMessage: setMessage,\n          handleSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to start chatting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"vEzqB7DhbHFTz0XeNgrv02M752o=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","ChatInput","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Chat","username","_s","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","handleSubmit","e","preventDefault","trim","console","log","emit","sender","receiver","prevMessages","on","users","uniqueUsers","filter","user","index","self","findIndex","u","data","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","socketId","msg","text","time","Date","toLocaleTimeString","isSender","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport ChatInput from './ChatInput';\r\nimport Message from './Message';\r\nimport \"../styles/Chat.css\"; // Adjust according to your setup\r\n\r\n// Initialize socket connection\r\nconst socket = io('http://localhost:3001');\r\n\r\nfunction Chat({ username }) {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n\r\n    // Function to handle message submission\r\n    const handleSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (message.trim() && selectedUser) {\r\n            console.log(`Sending message to ${selectedUser}:`, message);\r\n            socket.emit('send_private_message', {\r\n                sender: username,\r\n                receiver: selectedUser,\r\n                message,\r\n            });\r\n            // Add the message to the local message list\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                { sender: username, message }\r\n            ]);\r\n            setMessage(''); // Clear the input field\r\n        }\r\n    }, [message, selectedUser, username]);\r\n\r\n    // Set up socket listeners and emit join event\r\n    useEffect(() => {\r\n        socket.emit('join', username);\r\n        \r\n        // Update the active users list\r\n        socket.on('updateUserList', (users) => {\r\n            console.log('Updated active users list:', users);\r\n            const uniqueUsers = users.filter((user, index, self) =>\r\n                index === self.findIndex((u) => u.username === user.username)\r\n            );\r\n            setActiveUsers(uniqueUsers);\r\n        });\r\n\r\n        // Listen for incoming private messages\r\n        socket.on('receive_private_message', (data) => {\r\n            console.log('Received private message:', data);\r\n            setMessages((prevMessages) => [...prevMessages, data]);\r\n        });\r\n\r\n        // Clean up event listeners on unmount\r\n        return () => {\r\n            socket.off('updateUserList');\r\n            socket.off('receive_private_message');\r\n        };\r\n    }, [username]);\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            {/* Sidebar for Active Users */}\r\n            <div className=\"sidebar\">\r\n                <h2>Welcome, {username}</h2>\r\n                <div className=\"user-list\">\r\n                    <h3>Active Users</h3>\r\n                    <ul>\r\n                        {activeUsers.map((user) => (\r\n                            <li\r\n                                key={user.socketId}\r\n                                onClick={() => setSelectedUser(user.username)}\r\n                                className={selectedUser === user.username ? 'active' : ''}\r\n                            >\r\n                                {user.username}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <button className=\"logout-button\">Logout</button>\r\n            </div>\r\n\r\n            {/* Chat Box for Messaging */}\r\n            <div className=\"chat-box\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <h3>Chat with {selectedUser}</h3>\r\n                        <div className=\"messages\">\r\n                            {messages\r\n                                .filter(msg => msg.sender === selectedUser || msg.sender === username)\r\n                                .map((msg, index) => (\r\n                                    <Message\r\n                                        key={index}\r\n                                        text={msg.message}\r\n                                        time={new Date().toLocaleTimeString()}\r\n                                        isSender={msg.sender === username}\r\n                                    />\r\n                                ))}\r\n                        </div>\r\n                        <ChatInput\r\n                            message={message}\r\n                            setMessage={setMessage}\r\n                            handleSubmit={handleSubmit}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <div className=\"placeholder\">\r\n                        <p>Select a user to start chatting.</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}