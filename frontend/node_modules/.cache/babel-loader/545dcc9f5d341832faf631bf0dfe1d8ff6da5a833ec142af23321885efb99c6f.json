{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Message from './Message'; // Make sure you have this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleSend = () => {\n    if (inputValue.trim()) {\n      setMessages([...messages, {\n        text: inputValue,\n        timestamp: new Date().toLocaleTimeString()\n      }]);\n      setInputValue(''); // Clear input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        time: msg.timestamp\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value) // Handle input change\n        ,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","Message","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","inputValue","setInputValue","handleSend","trim","text","timestamp","Date","toLocaleTimeString","className","children","map","msg","index","time","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Message from './Message'; // Make sure you have this component\r\n\r\nfunction Chat() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleSend = () => {\r\n        if (inputValue.trim()) {\r\n            setMessages([\r\n                ...messages,\r\n                { text: inputValue, timestamp: new Date().toLocaleTimeString() },\r\n            ]);\r\n            setInputValue(''); // Clear input after sending\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-messages\">\r\n                {messages.map((msg, index) => (\r\n                    <Message key={index} text={msg.text} time={msg.timestamp} />\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={(e) => setInputValue(e.target.value)} // Handle input change\r\n                    placeholder=\"Type a message...\"\r\n                />\r\n                <button onClick={handleSend}>Send</button> {/* Button to send the message */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,EAAE;MACnBJ,WAAW,CAAC,CACR,GAAGD,QAAQ,EACX;QAAEM,IAAI,EAAEJ,UAAU;QAAEK,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAAE,CAAC,CACnE,CAAC;MACFN,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3Bd,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBX,QAAQ,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBjB,OAAA,CAACF,OAAO;QAAaW,IAAI,EAAEO,GAAG,CAACP,IAAK;QAACS,IAAI,EAAEF,GAAG,CAACN;MAAU,GAA3CO,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwC,CAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtB,OAAA;MAAKa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBd,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,UAAW;QAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;QAAA;QAChDI,WAAW,EAAC;MAAmB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFtB,OAAA;QAAQ6B,OAAO,EAAEtB,UAAW;QAAAO,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACpB,EAAA,CAhCQD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAkCb,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}