{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport \"../styles/Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction Chat({\n  username\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  useEffect(() => {\n    socket.emit('join', username);\n    socket.on('updateUserList', users => {\n      setActiveUsers(users.filter(user => user.username !== username));\n    });\n    socket.on('receive_private_message', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    return () => {\n      socket.off('updateUserList');\n      socket.off('receive_private_message');\n    };\n  }, [username]);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message && selectedUser) {\n      socket.emit('send_private_message', {\n        sender: username,\n        receiver: selectedUser,\n        message\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedUser(user.username),\n          style: {\n            cursor: 'pointer',\n            color: selectedUser === user.username ? 'blue' : 'black'\n          },\n          children: user.username\n        }, user.socketId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Chat with \", selectedUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.sender === username ? 'Me' : msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), \": \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"veHDX4CIHgmxqO69x3lOuHAU17Q=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Chat","username","_s","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","emit","on","users","filter","user","data","prevMessages","off","sendMessage","e","preventDefault","sender","receiver","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","cursor","color","socketId","msg","index","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport \"../styles/Chat.css\";\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nfunction Chat({ username }) {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n\r\n    useEffect(() => {\r\n        socket.emit('join', username);\r\n\r\n        socket.on('updateUserList', (users) => {\r\n            setActiveUsers(users.filter(user => user.username !== username));\r\n        });\r\n\r\n        socket.on('receive_private_message', (data) => {\r\n            setMessages(prevMessages => [...prevMessages, data]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('updateUserList');\r\n            socket.off('receive_private_message');\r\n        };\r\n    }, [username]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (message && selectedUser) {\r\n            socket.emit('send_private_message', {\r\n                sender: username,\r\n                receiver: selectedUser,\r\n                message,\r\n            });\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Welcome, {username}</h2>\r\n            <div>\r\n                <h3>Active Users</h3>\r\n                <ul>\r\n                    {activeUsers.map(user => (\r\n                        <li\r\n                            key={user.socketId}\r\n                            onClick={() => setSelectedUser(user.username)}\r\n                            style={{ cursor: 'pointer', color: selectedUser === user.username ? 'blue' : 'black' }}\r\n                        >\r\n                            {user.username}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            {selectedUser && (\r\n                <div>\r\n                    <h3>Chat with {selectedUser}</h3>\r\n                    <div>\r\n                        {messages.map((msg, index) => (\r\n                            <p key={index}>\r\n                                <strong>{msg.sender === username ? 'Me' : msg.sender}</strong>: {msg.message}\r\n                            </p>\r\n                        ))}\r\n                    </div>\r\n                    <form onSubmit={sendMessage}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            placeholder=\"Type a message...\"\r\n                        />\r\n                        <button type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}