{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport \"../styles/Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction Chat({\n  username\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n\n  // Handle new users and private messages\n  useEffect(() => {\n    socket.emit('join', username);\n\n    // Update the active users list, filtering out duplicates\n    socket.on('updateUserList', users => {\n      const uniqueUsers = users.filter((user, index, self) => index === self.findIndex(u => u.username === user.username));\n      setActiveUsers(uniqueUsers.filter(user => user.username !== username));\n    });\n\n    // Handle receiving private messages\n    socket.on('receive_private_message', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    return () => {\n      socket.off('updateUserList');\n      socket.off('receive_private_message');\n    };\n  }, [username]);\n\n  // Send private messages\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message && selectedUser) {\n      socket.emit('send_private_message', {\n        sender: username,\n        receiver: selectedUser,\n        message\n      });\n      // Add the message to the local chat view\n      setMessages(prevMessages => [...prevMessages, {\n        sender: username,\n        message\n      }]);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-btn\",\n      onClick: () => window.location.href = '/',\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Active Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setSelectedUser(user.username),\n            style: {\n              cursor: 'pointer',\n              color: selectedUser === user.username ? 'blue' : 'black'\n            },\n            children: user.username\n          }, user.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Chat with \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.sender === username ? 'Me' : msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), \": \", msg.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          className: \"message-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-btn\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"veHDX4CIHgmxqO69x3lOuHAU17Q=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Chat","username","_s","message","setMessage","messages","setMessages","activeUsers","setActiveUsers","selectedUser","setSelectedUser","emit","on","users","uniqueUsers","filter","user","index","self","findIndex","u","data","prevMessages","off","sendMessage","e","preventDefault","sender","receiver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","href","map","style","cursor","color","socketId","msg","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport \"../styles/Chat.css\";\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nfunction Chat({ username }) {\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n\r\n    // Handle new users and private messages\r\n    useEffect(() => {\r\n        socket.emit('join', username);\r\n\r\n        // Update the active users list, filtering out duplicates\r\n        socket.on('updateUserList', (users) => {\r\n            const uniqueUsers = users.filter((user, index, self) =>\r\n                index === self.findIndex((u) => u.username === user.username)\r\n            );\r\n            setActiveUsers(uniqueUsers.filter(user => user.username !== username));\r\n        });\r\n\r\n        // Handle receiving private messages\r\n        socket.on('receive_private_message', (data) => {\r\n            setMessages(prevMessages => [...prevMessages, data]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('updateUserList');\r\n            socket.off('receive_private_message');\r\n        };\r\n    }, [username]);\r\n\r\n    // Send private messages\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (message && selectedUser) {\r\n            socket.emit('send_private_message', {\r\n                sender: username,\r\n                receiver: selectedUser,\r\n                message,\r\n            });\r\n            // Add the message to the local chat view\r\n            setMessages(prevMessages => [...prevMessages, { sender: username, message }]);\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <h2>Welcome, {username}</h2>\r\n            <button className=\"logout-btn\" onClick={() => window.location.href = '/'}>Logout</button>\r\n\r\n            <div className=\"chat-body\">\r\n                <div className=\"user-list\">\r\n                    <h3>Active Users</h3>\r\n                    <ul>\r\n                        {activeUsers.map(user => (\r\n                            <li\r\n                                key={user.socketId}\r\n                                onClick={() => setSelectedUser(user.username)}\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    color: selectedUser === user.username ? 'blue' : 'black'\r\n                                }}\r\n                            >\r\n                                {user.username}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                {selectedUser && (\r\n                    <div className=\"chat-box\">\r\n                        <h3>Chat with {selectedUser}</h3>\r\n                        <div className=\"messages\">\r\n                            {messages.map((msg, index) => (\r\n                                <p key={index}>\r\n                                    <strong>{msg.sender === username ? 'Me' : msg.sender}</strong>: {msg.message}\r\n                                </p>\r\n                            ))}\r\n                        </div>\r\n                        <form onSubmit={sendMessage} className=\"message-form\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={message}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                placeholder=\"Type a message...\"\r\n                                className=\"message-input\"\r\n                            />\r\n                            <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}