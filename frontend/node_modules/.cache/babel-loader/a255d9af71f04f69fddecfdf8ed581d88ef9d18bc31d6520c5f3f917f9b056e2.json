{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\chat-app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:5000'); // Ensure this URL is correct\n\nconst Chat = ({\n  username\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Send message to the server\n  const sendMessage = () => {\n    if (message.trim()) {\n      socket.emit('send_message', {\n        message,\n        username\n      });\n      setMessages([...messages, {\n        message,\n        username,\n        type: 'sent'\n      }]);\n      setMessage(''); // Clear input after sending\n    }\n  };\n\n  // Receive message from the server\n  useEffect(() => {\n    socket.on('receive_message', data => {\n      setMessages(prevMessages => [...prevMessages, {\n        ...data,\n        type: 'received'\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: username || \"John Doe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Active Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`,\n        children: msg.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value) // Make sure this handler is present\n        ,\n        onKeyPress: e => e.key === 'Enter' && sendMessage() // Optional feature\n        ,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","connect","Chat","username","_s","message","setMessage","messages","setMessages","sendMessage","trim","emit","type","on","data","prevMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io.connect('http://localhost:5000'); // Ensure this URL is correct\r\n\r\nconst Chat = ({ username }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // Send message to the server\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      socket.emit('send_message', { message, username });\r\n      setMessages([...messages, { message, username, type: 'sent' }]);\r\n      setMessage(''); // Clear input after sending\r\n    }\r\n  };\r\n\r\n  // Receive message from the server\r\n  useEffect(() => {\r\n    socket.on('receive_message', (data) => {\r\n      setMessages((prevMessages) => [...prevMessages, { ...data, type: 'received' }]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-header\">\r\n        <h3>{username || \"John Doe\"}</h3>\r\n        <span>Active Now</span>\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message-bubble ${msg.type === 'sent' ? 'sent' : 'received'}`}\r\n          >\r\n            {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}  // Make sure this handler is present\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}  // Optional feature\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAEpD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIJ,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MAClBV,MAAM,CAACW,IAAI,CAAC,cAAc,EAAE;QAAEN,OAAO;QAAEF;MAAS,CAAC,CAAC;MAClDK,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEF,OAAO;QAAEF,QAAQ;QAAES,IAAI,EAAE;MAAO,CAAC,CAAC,CAAC;MAC/DN,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACdI,MAAM,CAACa,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACrCN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAE,GAAGD,IAAI;QAAEF,IAAI,EAAE;MAAW,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BlB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BlB,OAAA;QAAAkB,QAAA,EAAKd,QAAQ,IAAI;MAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjCtB,OAAA;QAAAkB,QAAA,EAAM;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACNtB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BV,QAAQ,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBzB,OAAA;QAEEiB,SAAS,EAAE,kBAAkBO,GAAG,CAACX,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,UAAU,EAAG;QAAAK,QAAA,EAExEM,GAAG,CAAClB;MAAO,GAHPmB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBlB,OAAA;QACEa,IAAI,EAAC,MAAM;QACXa,KAAK,EAAEpB,OAAQ;QACfqB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE;QAAA;QAC9CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIrB,WAAW,CAAC,CAAE,CAAE;QAAA;QACxDsB,WAAW,EAAC;MAAmB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFtB,OAAA;QAAQiC,OAAO,EAAEvB,WAAY;QAAAQ,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhDIF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAkDV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}